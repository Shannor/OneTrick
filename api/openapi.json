{
  "openapi": "3.0.0",
  "info": {
    "title": "One Trick",
    "description": "One Trick",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://api.d2onetrick.com"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "responses": {
          "200": {
            "description": "ping response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            }
          }
        }
      }
    },
    "/admin/backfill-character-ids": {
      "post": {
        "operationId": "BackfillAllUsersCharacterIds",
        "responses": {
          "200": {
            "description": "Summary of backfilled users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "updated",
                    "failed"
                  ],
                  "properties": {
                    "updated": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "failed": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "summary": "return a list from bungie of matching users",
      "post": {
        "operationId": "search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "prefix",
                  "page"
                ],
                "properties": {
                  "prefix": {
                    "type": "string"
                  },
                  "page": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a list of search results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "results",
                    "hasMore"
                  ],
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SearchUserResult"
                      }
                    },
                    "hasMore": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fireteam": {
      "get": {
        "operationId": "GetFireteam",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the current fireteam. Will include the user if they are online. If offline the array will be empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FireteamMember"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server is down",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "status"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User friendly description of the error"
                    },
                    "status": {
                      "$ref": "#/components/schemas/InternalError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "operationId": "Profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "503": {
            "description": "Server is down",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "status"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User friendly description of the error"
                    },
                    "status": {
                      "$ref": "#/components/schemas/InternalError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "operationId": "Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logging in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "operationId": "RefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refreshing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/snapshots": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          }
        ],
        "requestBody": {
          "description": "Provide the character to take the snapshot of",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "characterId"
                ],
                "type": "object",
                "properties": {
                  "characterId": {
                    "type": "string",
                    "x-go-name": "characterID"
                  }
                }
              }
            }
          }
        },
        "operationId": "CreateSnapshot",
        "description": "Creates a new snapshot in the system and returns a list of ",
        "responses": {
          "201": {
            "description": "Return the created snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterSnapshot"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "GetSnapshots",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Returns a list of snapshots in the system for a character",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "characterId",
            "in": "query",
            "x-go-name": "characterID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all snapshots for a character",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CharacterSnapshot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/snapshots/{snapshotId}": {
      "get": {
        "operationId": "GetSnapshot",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Returns a snapshot in the system for a character",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "name": "snapshotId",
            "in": "path",
            "x-go-name": "snapshotID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier for the snapshot."
          },
          {
            "name": "characterId",
            "in": "query",
            "x-go-name": "characterID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specific character snapshot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterSnapshot"
                }
              }
            }
          }
        }
      }
    },
    "/activities": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 30,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "characterId",
            "x-go-name": "characterID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ActivityMode"
            }
          }
        ],
        "operationId": "GetActivities",
        "responses": {
          "200": {
            "description": "List of Activities that have past",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetailActivity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activities/{activityId}": {
      "get": {
        "operationId": "GetActivity",
        "parameters": [
          {
            "name": "characterId",
            "in": "query",
            "x-go-name": "characterID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "x-go-name": "activityID",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier for the activity."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of used guns during an activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "activity",
                    "teams",
                    "snapshots",
                    "users"
                  ],
                  "properties": {
                    "activity": {
                      "$ref": "#/components/schemas/ActivityHistory"
                    },
                    "teams": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "aggregate": {
                      "$ref": "#/components/schemas/Aggregate"
                    },
                    "snapshots": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/CharacterSnapshot"
                      }
                    },
                    "postGameEntries": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "users": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          }
        ],
        "requestBody": {
          "description": "Provide the character to start the session for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "characterId",
                  "userId"
                ],
                "type": "object",
                "properties": {
                  "characterId": {
                    "type": "string",
                    "x-go-name": "characterID"
                  },
                  "userId": {
                    "type": "string",
                    "x-go-name": "userID"
                  }
                }
              }
            }
          }
        },
        "operationId": "StartSession",
        "description": "Create a new session",
        "responses": {
          "201": {
            "description": "Return the created session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "description": "Request is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 30,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "characterId",
            "x-go-name": "characterID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "complete"
              ],
              "x-enum-varnames": [
                "SessionRequestPending",
                "SessionRequestComplete"
              ]
            }
          }
        ],
        "operationId": "GetSessions",
        "responses": {
          "200": {
            "description": "List of Sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-name": "sessionID"
            }
          }
        ],
        "operationId": "GetSession",
        "description": "Get a specific session",
        "responses": {
          "200": {
            "description": "Return a session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-User-ID"
          },
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          },
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-name": "sessionID"
            }
          }
        ],
        "requestBody": {
          "description": "Provide the character to start the session for",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "characterId"
                ],
                "type": "object",
                "properties": {
                  "characterId": {
                    "type": "string",
                    "x-go-name": "characterID"
                  },
                  "name": {
                    "type": "string"
                  },
                  "completedAt": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "UpdateSession",
        "description": "Complete a session",
        "responses": {
          "201": {
            "description": "Return the completed session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/aggregates": {
      "get": {
        "operationId": "GetSessionAggregates",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-name": "sessionID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of aggregates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "aggregates",
                    "snapshots"
                  ],
                  "properties": {
                    "aggregates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Aggregate"
                      }
                    },
                    "snapshots": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/CharacterSnapshot"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/sessions": {
      "get": {
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 30,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "characterId",
            "x-go-name": "characterID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "complete"
              ],
              "x-enum-varnames": [
                "SessionRequestPending",
                "SessionRequestComplete"
              ]
            }
          }
        ],
        "operationId": "GetPublicSessions",
        "responses": {
          "200": {
            "description": "List of Sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/sessions/{sessionId}": {
      "get": {
        "operationId": "GetPublicSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-name": "sessionID"
            }
          }
        ],
        "description": "Get a specific session",
        "responses": {
          "200": {
            "description": "Return a session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      }
    },
    "/public/sessions/{sessionId}/aggregates": {
      "get": {
        "operationId": "GetPublicSessionAggregates",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-name": "sessionID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of aggregates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "aggregates",
                    "snapshots"
                  ],
                  "properties": {
                    "aggregates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Aggregate"
                      }
                    },
                    "snapshots": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/CharacterSnapshot"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/profile": {
      "get": {
        "operationId": "GetPublicProfile",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "x-go-name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Profile Info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "503": {
            "description": "Server is down",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "status"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "User friendly description of the error"
                    },
                    "status": {
                      "$ref": "#/components/schemas/InternalError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actions/session-checkin": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Membership-ID"
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "sessionId",
                  "fireteam"
                ],
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "x-go-name": "sessionID"
                  },
                  "fireteam": {
                    "type": "object",
                    "description": "fireteam member user id mapped to their chosen character id",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "SessionCheckIn",
        "description": "Perform session update logic",
        "responses": {
          "200": {
            "description": "Return the created session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/top-loadouts": {
      "get": {
        "operationId": "GetTopLoadouts",
        "parameters": [
          {
            "in": "query",
            "name": "characterId",
            "x-go-name": "characterID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "x-go-name": "userID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the top snapshots for a user",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "items",
                    "count"
                  ],
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CharacterSnapshot"
                      }
                    },
                    "count": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "X-User-ID": {
        "name": "X-User-ID",
        "schema": {
          "type": "string"
        },
        "in": "header",
        "required": true
      },
      "X-Membership-ID": {
        "name": "X-Membership-ID",
        "schema": {
          "type": "string"
        },
        "in": "header",
        "required": true
      }
    },
    "schemas": {
      "InternalError": {
        "type": "string",
        "enum": [
          "DestinyServerDown",
          "InternalSystemDown",
          "UnknownError"
        ],
        "x-enum-varnames": [
          "ErrDestinyServerDown",
          "ErrInternalSystemDown",
          "ErrUnknownError"
        ]
      },
      "Profile": {
        "type": "object",
        "required": [
          "id",
          "displayName",
          "uniqueName",
          "membershipId",
          "characters"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "membershipId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "uniqueName": {
            "type": "string"
          },
          "characters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Character"
            }
          }
        }
      },
      "DetailActivity": {
        "type": "object",
        "required": [
          "activity"
        ],
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/ActivityHistory"
          },
          "aggregate": {
            "$ref": "#/components/schemas/Aggregate"
          }
        }
      },
      "CharacterSnapshot": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "characterSnapshot"
        },
        "type": "object",
        "required": [
          "loadout",
          "createdAt",
          "characterId",
          "id",
          "userId",
          "hash",
          "name",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-go-name": "ID",
            "description": "Id of the snapshot",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "name": {
            "type": "string",
            "x-go-name": "name",
            "description": "Name of the snapshot, will probably be generated by default by the system but can be changed by a user",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "userId": {
            "type": "string",
            "x-go-name": "userID",
            "description": "Id of the user it belongs to",
            "x-oapi-codegen-extra-tags": {
              "firestore": "userId"
            }
          },
          "hash": {
            "type": "string",
            "description": "Hash of all the items to give us a unique key",
            "x-oapi-codegen-extra-tags": {
              "firestore": "hash"
            }
          },
          "characterId": {
            "type": "string",
            "x-go-name": "characterID",
            "description": "Id of the character being recorded",
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterId"
            }
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClassStat"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp for when the snapshot was first created",
            "x-oapi-codegen-extra-tags": {
              "firestore": "createdAt"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp for when the snapshot was last updated or when a history entry was made for it.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "updatedAt"
            }
          },
          "loadout": {
            "$ref": "#/components/schemas/Loadout"
          }
        }
      },
      "ItemSnapshot": {
        "type": "object",
        "required": [
          "details",
          "instanceId",
          "itemHash",
          "name"
        ],
        "properties": {
          "instanceId": {
            "x-go-name": "instanceID",
            "type": "string",
            "description": "Specific instance id for the item",
            "x-oapi-codegen-extra-tags": {
              "firestore": "instanceId"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of the particular item",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "itemHash": {
            "type": "integer",
            "description": "Id used to find the definition of the item",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "itemHash"
            }
          },
          "bucketHash": {
            "type": "integer",
            "description": "Hash of which bucket this item can be equipped in",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "bucketHash"
            }
          },
          "details": {
            "$ref": "#/components/schemas/ItemProperties"
          }
        }
      },
      "Loadout": {
        "description": "All buckets that we currently care about, Kinetic, Energy, Heavy and Class for now. Each will be a key in the items.",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ItemSnapshot"
        },
        "x-oapi-codegen-extra-tags": {
          "firestore": "loadout"
        }
      },
      "ActivityHistory": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "activityHistory"
        },
        "required": [
          "referenceId",
          "activityHash",
          "instanceId",
          "location",
          "description",
          "activity",
          "imageUrl",
          "activityIcon",
          "period"
        ],
        "properties": {
          "location": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "location"
            }
          },
          "activity": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "activity"
            }
          },
          "description": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "period": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "period"
            }
          },
          "referenceId": {
            "x-go-name": "referenceID",
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "referenceId"
            }
          },
          "activityHash": {
            "type": "integer",
            "format": "int64",
            "description": "Hash id of the type of activity: Strike, Competitive, QuickPlay, etc. ",
            "x-oapi-codegen-extra-tags": {
              "firestore": "activityHash"
            }
          },
          "activityIcon": {
            "type": "string",
            "description": "URL to the icon for the type of activity, IB, Crucible, etc.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "activityIcon"
            }
          },
          "instanceId": {
            "x-go-name": "instanceID",
            "type": "string",
            "description": "Id to get more details about the particular game",
            "x-oapi-codegen-extra-tags": {
              "firestore": "instanceId"
            }
          },
          "isPrivate": {
            "type": "boolean",
            "x-oapi-codegen-extra-tags": {
              "firestore": "isPrivate"
            }
          },
          "imageUrl": {
            "type": "string",
            "x-go-name": "imageURL",
            "description": "URL for the image of the destination activity",
            "x-oapi-codegen-extra-tags": {
              "firestore": "imageUrl"
            }
          },
          "mode": {
            "type": "string",
            "description": "Name",
            "x-oapi-codegen-extra-tags": {
              "firestore": "mode"
            }
          }
        }
      },
      "Pong": {
        "type": "object",
        "required": [
          "ping"
        ],
        "properties": {
          "ping": {
            "type": "string",
            "example": "pong"
          }
        }
      },
      "OneTrickError": {
        "description": "Known errors for the one trick API",
        "type": "object",
        "required": [
          "message",
          "status"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "User friendly description of the error"
          },
          "status": {
            "$ref": "#/components/schemas/InternalError"
          }
        }
      },
      "ConfidenceSource": {
        "type": "string",
        "enum": [
          "system",
          "user"
        ],
        "x-oapi-codegen-extra-tags": {
          "firestore": "confidenceSource"
        },
        "x-enum-varnames": [
          "SystemConfidenceSource",
          "UserConfidenceSource"
        ]
      },
      "ConfidenceLevel": {
        "type": "string",
        "enum": [
          "notFound",
          "noMatch",
          "low",
          "medium",
          "high"
        ],
        "x-enum-varnames": [
          "NotFoundConfidenceLevel",
          "NoMatchConfidenceLevel",
          "LowConfidenceLevel",
          "MediumConfidenceLevel",
          "HighConfidenceLevel"
        ],
        "x-oapi-codegen-extra-tags": {
          "firestore": "confidenceLevel"
        }
      },
      "SnapshotLink": {
        "type": "object",
        "required": [
          "characterId",
          "confidenceLevel",
          "confidenceSource",
          "createdAt"
        ],
        "properties": {
          "characterId": {
            "x-go-name": "characterID",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterId"
            }
          },
          "snapshotId": {
            "x-go-name": "snapshotID",
            "description": "ID of the snapshot for the particular player",
            "x-oapi-codegen-extra-tags": {
              "firestore": "snapshotId"
            },
            "type": "string"
          },
          "sessionId": {
            "x-go-name": "sessionID",
            "description": "Optional ID of a session if this Snapshot link was added by a session check-in. Will be null in the case, where the link is added after the fact",
            "x-oapi-codegen-extra-tags": {
              "firestore": "sessionId"
            },
            "type": "string"
          },
          "confidenceLevel": {
            "$ref": "#/components/schemas/ConfidenceLevel"
          },
          "confidenceSource": {
            "$ref": "#/components/schemas/ConfidenceSource"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "createdAt"
            }
          }
        }
      },
      "Aggregate": {
        "type": "object",
        "required": [
          "id",
          "activityId",
          "activityDetails",
          "snapshotLinks",
          "performance",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-go-name": "ID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "activityId": {
            "type": "string",
            "x-go-name": "activityID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "activityId"
            }
          },
          "activityDetails": {
            "$ref": "#/components/schemas/ActivityHistory"
          },
          "snapshotLinks": {
            "type": "object",
            "x-oapi-codegen-extra-tags": {
              "firestore": "snapshotLinks"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/SnapshotLink"
            }
          },
          "performance": {
            "type": "object",
            "x-oapi-codegen-extra-tags": {
              "firestore": "performance"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/InstancePerformance"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "createdAt"
            }
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accessToken": {
            "type": "string",
            "description": "Access token value."
          },
          "tokenType": {
            "type": "string",
            "description": "Type of the access token."
          },
          "expiresIn": {
            "type": "integer",
            "description": "The time duration in which the access token will be expired."
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token for acquiring new access token after it is expired."
          },
          "refreshExpiresIn": {
            "type": "integer",
            "description": "The time duration in which the refresh token will be expired."
          },
          "membershipId": {
            "type": "string",
            "description": "Membership identification value."
          },
          "primaryMembershipId": {
            "type": "string",
            "description": "Membership that is mainly used"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "accessToken",
          "tokenType",
          "expiresIn",
          "refreshToken",
          "refreshExpiresIn",
          "membershipId",
          "primaryMembershipId",
          "id",
          "timestamp"
        ]
      },
      "WeaponInstanceMetrics": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "weaponInstanceMetrics"
        },
        "properties": {
          "referenceId": {
            "type": "integer",
            "description": "The hash ID of the item definition that describes the weapon.",
            "format": "int64",
            "x-go-name": "referenceID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "referenceId"
            }
          },
          "display": {
            "$ref": "#/components/schemas/Display"
          },
          "properties": {
            "$ref": "#/components/schemas/ItemProperties"
          },
          "stats": {
            "x-oapi-codegen-extra-tags": {
              "firestore": "stats"
            },
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/UniqueStatValue"
            }
          }
        }
      },
      "Display": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "display"
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "hasIcon"
        ],
        "properties": {
          "name": {
            "type": "string",
            "x-go-name": "name",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "hasIcon": {
            "type": "boolean",
            "x-go-name": "hasIcon",
            "x-oapi-codegen-extra-tags": {
              "firestore": "hasIcon"
            }
          },
          "description": {
            "type": "string",
            "x-go-name": "description",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "icon": {
            "type": "string",
            "x-go-name": "icon",
            "x-oapi-codegen-extra-tags": {
              "firestore": "icon"
            }
          }
        }
      },
      "InstancePerformance": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "instancePerformance"
        },
        "required": [
          "playerStats",
          "weapons"
        ],
        "properties": {
          "playerStats": {
            "$ref": "#/components/schemas/PlayerStats"
          },
          "weapons": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WeaponInstanceMetrics"
            },
            "x-oapi-codegen-extra-tags": {
              "firestore": "weapons"
            }
          },
          "extra": {
            "type": "object",
            "x-oapi-codegen-extra-tags": {
              "firestore": "extra"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/UniqueStatValue"
            }
          }
        }
      },
      "UniqueStatValue": {
        "type": "object",
        "required": [
          "basic"
        ],
        "properties": {
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "basic": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Basic stat value.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "basic"
            }
          },
          "pga": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Per game average for the statistic, if applicable",
            "x-oapi-codegen-extra-tags": {
              "firestore": "pga"
            }
          },
          "weighted": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Weighted value of the stat if a weight greater than 1 has been assigned.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "weighted"
            }
          },
          "activityId": {
            "type": "integer",
            "description": "When a stat represents the best, most, longest, fastest or some other personal best, the actual activity ID where that personal best was established is available on this property.",
            "format": "int64",
            "nullable": true,
            "x-go-name": "activityID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "activityId"
            }
          }
        }
      },
      "ActivityMode": {
        "type": "string",
        "enum": [
          "competitive",
          "quickplay",
          "allPvP",
          "ironBanner"
        ],
        "x-enum-varnames": [
          "Competitive",
          "Quickplay",
          "AllPvP",
          "IronBanner"
        ]
      },
      "StatsValuePair": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "statsValuePair"
        },
        "properties": {
          "value": {
            "type": "number",
            "description": "Raw value of the statistic",
            "format": "double",
            "x-oapi-codegen-extra-tags": {
              "firestore": "value"
            }
          },
          "displayValue": {
            "type": "string",
            "description": "Localized formatted version of the value.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "displayValue"
            }
          }
        }
      },
      "Perk": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "perks"
        },
        "type": "object",
        "required": [
          "name",
          "hash"
        ],
        "properties": {
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "description": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "hash": {
            "type": "integer",
            "description": "The hash ID of the perk",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "hash"
            }
          },
          "iconPath": {
            "type": "string",
            "description": "link to icon",
            "x-oapi-codegen-extra-tags": {
              "firestore": "iconPath"
            }
          }
        }
      },
      "Stats": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "stats"
        },
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/GunStat"
        },
        "x-dictionary-key": {
          "type": "string"
        }
      },
      "GunStat": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "gunStat"
        },
        "type": "object",
        "required": [
          "name",
          "hash",
          "value",
          "description"
        ],
        "properties": {
          "hash": {
            "type": "integer",
            "description": "The hash ID of the stat.",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "hash"
            }
          },
          "value": {
            "type": "integer",
            "description": "The value of the stat.",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "value"
            }
          },
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "description": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          }
        }
      },
      "Socket": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "socket"
        },
        "type": "object",
        "required": [
          "plugHash",
          "name",
          "description"
        ],
        "properties": {
          "plugHash": {
            "type": "integer",
            "description": "The hash ID of the socket plug.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "plugHash"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the socket plug is enabled or not.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "isEnabled"
            }
          },
          "isVisible": {
            "type": "boolean",
            "description": "Whether the socket plug is visible or not.",
            "x-oapi-codegen-extra-tags": {
              "firestore": "isVisible"
            }
          },
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "description": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "icon": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "icon"
            }
          },
          "itemTypeDisplayName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "itemTypeDisplayName"
            }
          },
          "itemTypeTieredDisplayName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "itemTypeTieredDisplayName"
            }
          }
        }
      },
      "BaseItemInfo": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "baseItemInfo"
        },
        "type": "object",
        "required": [
          "name",
          "itemHash",
          "instanceId",
          "bucketHash"
        ],
        "properties": {
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "itemHash": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "itemHash"
            }
          },
          "instanceId": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "instanceId"
            }
          },
          "bucketHash": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "bucketHash"
            }
          },
          "damage": {
            "$ref": "#/components/schemas/DamageInfo"
          }
        }
      },
      "DamageInfo": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "damageInfo"
        },
        "type": "object",
        "required": [
          "damageType",
          "damageIcon",
          "transparentIcon",
          "color"
        ],
        "properties": {
          "damageType": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "damageType"
            }
          },
          "damageIcon": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "damageIcon"
            }
          },
          "transparentIcon": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "transparentIcon"
            }
          },
          "color": {
            "$ref": "#/components/schemas/Color"
          }
        }
      },
      "Color": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "color"
        },
        "type": "object",
        "required": [
          "red",
          "green",
          "blue",
          "alpha"
        ],
        "properties": {
          "red": {
            "type": "integer",
            "format": "int",
            "x-oapi-codegen-extra-tags": {
              "firestore": "red"
            }
          },
          "green": {
            "type": "integer",
            "format": "int",
            "x-oapi-codegen-extra-tags": {
              "firestore": "green"
            }
          },
          "blue": {
            "type": "integer",
            "format": "int",
            "x-oapi-codegen-extra-tags": {
              "firestore": "blue"
            }
          },
          "alpha": {
            "type": "integer",
            "format": "int",
            "x-oapi-codegen-extra-tags": {
              "firestore": "alpha"
            }
          }
        }
      },
      "FireteamMember": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "fireteamMember"
        },
        "type": "object",
        "required": [
          "id",
          "membershipId",
          "displayName"
        ],
        "properties": {
          "id": {
            "x-go-name": "ID",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "membershipId": {
            "type": "string",
            "x-go-name": "membershipID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "membershipId"
            }
          },
          "displayName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "displayName"
            }
          }
        }
      },
      "Character": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "character"
        },
        "type": "object",
        "required": [
          "id",
          "light",
          "emblemBackgroundURL",
          "emblemURL",
          "emblemColor",
          "currentTitle",
          "race",
          "class"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "light": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "light"
            }
          },
          "emblemURL": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "emblemURL"
            }
          },
          "emblemBackgroundURL": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "emblemBackgroundURL"
            }
          },
          "currentTitle": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "currentTitle"
            }
          },
          "emblemColor": {
            "$ref": "#/components/schemas/Color"
          },
          "race": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "race"
            }
          },
          "class": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "class"
            }
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ClassStat"
            }
          }
        }
      },
      "Team": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "team"
        },
        "type": "object",
        "required": [
          "id",
          "standing",
          "score"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-go-name": "ID"
          },
          "standing": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          }
        }
      },
      "ItemProperties": {
        "type": "object",
        "x-go-name": "ItemProperties",
        "x-oapi-codegen-extra-tags": {
          "firestore": "itemProperties"
        },
        "required": [
          "perks",
          "stats",
          "baseInfo"
        ],
        "properties": {
          "characterId": {
            "type": "string",
            "description": "If the item is on a character, this will return the ID of the character that is holding the item.",
            "nullable": true,
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterId"
            }
          },
          "baseInfo": {
            "$ref": "#/components/schemas/BaseItemInfo"
          },
          "perks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Perk"
            },
            "description": "Information specifically about the perks currently active on the item. COMPONENT TYPE: ItemPerks",
            "x-oapi-codegen-extra-tags": {
              "firestore": "perks"
            }
          },
          "stats": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Stats"
              }
            ],
            "description": "Information about the computed stats of the item: power, defense, etc... COMPONENT TYPE: ItemStats",
            "x-oapi-codegen-extra-tags": {
              "firestore": "stats"
            }
          },
          "sockets": {
            "type": "array",
            "x-oapi-codegen-extra-tags": {
              "firestore": "sockets"
            },
            "items": {
              "$ref": "#/components/schemas/Socket"
            },
            "description": "Information about the sockets of the item: which are currently active, what potential sockets you could have and the stats/abilities/perks you can gain from them. COMPONENT TYPE: ItemSockets"
          }
        },
        "description": "The response object for retrieving an individual instanced item. None of these components are relevant for an item that doesn't have an \"itemInstanceId\": for those, get your information from the DestinyInventoryDefinition."
      },
      "PlayerStats": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "playerStats"
        },
        "type": "object",
        "description": "All Player Stats from a match that we currently care about",
        "properties": {
          "kills": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Number of kills done in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "kills"
            }
          },
          "assists": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Number of assists done in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "assists"
            }
          },
          "deaths": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Number of deaths done in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "deaths"
            }
          },
          "kd": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "ratio of kill / deaths in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "kd"
            }
          },
          "kda": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "ratio of kills + assists/ deaths in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "kda"
            }
          },
          "standing": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Win or lose in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "standing"
            }
          },
          "team": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Id for the team the player was on this match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "team"
            }
          },
          "fireTeamId": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "ID for the fireteam player was on. If the same as another player then they were together",
            "x-oapi-codegen-extra-tags": {
              "firestore": "fireTeamId"
            },
            "x-go-name": "fireTeamID"
          },
          "timePlayed": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/StatsValuePair"
              }
            ],
            "description": "Time in seconds the player was in the match",
            "x-oapi-codegen-extra-tags": {
              "firestore": "timePlayed"
            }
          }
        }
      },
      "PostGameEntry": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "postGameEntry"
        },
        "properties": {
          "characterId": {
            "type": "string",
            "x-go-name": "characterID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterId"
            }
          },
          "standing": {
            "type": "integer",
            "format": "int32",
            "x-oapi-codegen-extra-tags": {
              "firestore": "standing"
            }
          }
        }
      },
      "ClassStat": {
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "firestore": "classStat"
        },
        "required": [
          "name",
          "description",
          "hasIcon",
          "icon",
          "value",
          "statCategory",
          "aggregationType"
        ],
        "properties": {
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "icon": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "icon"
            }
          },
          "hasIcon": {
            "type": "boolean",
            "x-oapi-codegen-extra-tags": {
              "firestore": "hasIcon"
            }
          },
          "description": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "statCategory": {
            "type": "integer",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "aggregationType": {
            "type": "integer",
            "x-oapi-codegen-extra-tags": {
              "firestore": "description"
            }
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "x-oapi-codegen-extra-tags": {
              "firestore": "value"
            }
          }
        }
      },
      "Session": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "session"
        },
        "type": "object",
        "required": [
          "id",
          "startedAt",
          "userId",
          "characterId",
          "aggregateIds"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-go-name": "ID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "startedAt"
            }
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "completedAt"
            }
          },
          "userId": {
            "type": "string",
            "x-go-name": "userID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "userId"
            }
          },
          "characterId": {
            "type": "string",
            "x-go-name": "characterID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterId"
            }
          },
          "name": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "name"
            }
          },
          "startedBy": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditField"
              }
            ],
            "x-oapi-codegen-extra-tags": {
              "firestore": "startedBy"
            }
          },
          "completedBy": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditField"
              }
            ],
            "x-oapi-codegen-extra-tags": {
              "firestore": "completedBy"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "complete"
            ],
            "x-enum-varnames": [
              "SessionPending",
              "SessionComplete"
            ],
            "x-oapi-codegen-extra-tags": {
              "firestore": "status"
            }
          },
          "aggregateIds": {
            "type": "array",
            "x-go-name": "aggregateIDs",
            "x-oapi-codegen-extra-tags": {
              "firestore": "aggregateIds"
            },
            "description": "List of aggregates linked to this session",
            "items": {
              "type": "string"
            }
          },
          "lastSeenActivityId": {
            "type": "string",
            "x-go-name": "lastSeenActivityID",
            "writeOnly": true,
            "x-oapi-codegen-extra-tags": {
              "firestore": "lastSeenActivityId"
            }
          },
          "lastSeenTimestamp": {
            "type": "string",
            "format": "date-time",
            "writeOnly": true,
            "x-oapi-codegen-extra-tags": {
              "firestore": "lastSeenTimestamp"
            }
          }
        }
      },
      "SearchUserResult": {
        "x-oapi-codegen-extra-tags": {
          "firestore": "searchUserResult"
        },
        "required": [
          "displayName",
          "nameCode",
          "bungieMembershipId",
          "memberships"
        ],
        "properties": {
          "displayName": {
            "type": "string"
          },
          "nameCode": {
            "type": "string"
          },
          "bungieMembershipId": {
            "type": "string",
            "x-go-name": "bungieMembershipID"
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinyMembership"
            }
          }
        }
      },
      "DestinyMembership": {
        "type": "object",
        "required": [
          "displayName",
          "membershipId",
          "membershipType"
        ],
        "properties": {
          "displayName": {
            "type": "string"
          },
          "membershipId": {
            "x-go-name": "membershipID",
            "type": "string"
          },
          "membershipType": {
            "$ref": "#/components/schemas/SourceSystem"
          },
          "iconPath": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "memberId",
          "memberships",
          "primaryMembershipId",
          "displayName",
          "uniqueName",
          "createdAt",
          "characterIds"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            },
            "x-go-name": "ID"
          },
          "memberId": {
            "type": "string",
            "x-go-name": "memberID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "memberId"
            }
          },
          "primaryMembershipId": {
            "type": "string",
            "x-go-name": "primaryMembershipID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "primaryMembershipId"
            }
          },
          "uniqueName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "uniqueName"
            }
          },
          "displayName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "displayName"
            }
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Membership"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-oapi-codegen-extra-tags": {
              "firestore": "createdAt"
            }
          },
          "characterIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-oapi-codegen-extra-tags": {
              "firestore": "characterIds"
            },
            "x-go-name": "characterIDs"
          }
        }
      },
      "Membership": {
        "type": "object",
        "required": [
          "id",
          "type",
          "displayName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-go-name": "ID",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            }
          },
          "type": {
            "type": "integer",
            "format": "int64",
            "x-oapi-codegen-extra-tags": {
              "firestore": "type"
            }
          },
          "displayName": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "displayName"
            }
          }
        }
      },
      "AuditField": {
        "type": "object",
        "required": [
          "id",
          "username"
        ],
        "properties": {
          "id": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "id"
            },
            "x-go-name": "ID"
          },
          "username": {
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "firestore": "username"
            }
          }
        }
      },
      "SourceSystem": {
        "type": "string",
        "enum": [
          "playstation",
          "xbox",
          "steam",
          "stadia",
          "unknown"
        ],
        "x-enum-varnames": [
          "SystemPlayStation",
          "SystemXbox",
          "SystemSteam",
          "SystemStadia",
          "SystemUnknown"
        ]
      }
    }
  }
}